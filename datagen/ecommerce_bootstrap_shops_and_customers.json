[
    {
        "_meta": {
            "topic": "shops",
            "key": "id",
            "relationships": [
                {
                    "topic": "products",
                    "parent_field": "product_ids",
                    "child_field": "id",
                    "records_per": 100
                },
                {
                    "topic": "customers",
                    "parent_field": "customer_ids",
                    "child_field": "id",
                    "records_per": 50
                }
            ]
        },
        "id": "faker.number.int(100)",
        "name": "faker.company.name()",
        "product_ids": "faker.helpers.multiple((_, i) => i+1, {count: 100})",
        "customer_ids": "faker.helpers.multiple((_, i) => i+1, {count: 50})"
    },
    {
        "_meta": {
            "topic": "products",
            "key": "id"
        },
        "id": "this string can be anything since this field is determined by product.id",
        "title": "faker.commerce.productName()",
        "category": "faker.commerce.product()",
        "vendor": "faker.company.name()",
        "price": "faker.commerce.price({ min: 5, max: 100})",
        "description": "faker.commerce.productDescription()",
        "color": "faker.color.human()",
        "size": "faker.helpers.arrayElement(['S', 'M', 'L', 'XL'])",
        "material": "faker.commerce.productMaterial()"
    },
    {
        "_meta": {
            "topic": "customers",
            "key": "id"
        },
        "id": "this string can be anything since this field is determined by customer.id",
        "name": "faker.person.fullName()",
        "email": "faker.internet.exampleEmail()",
        "address": "faker.location.streetAddress()",
        "city": "faker.location.city()",
        "state": "faker.location.state()",
        "zipcode": "faker.location.zipCode()"
    }
]
